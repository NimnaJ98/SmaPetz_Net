# Generated by Django 3.2.8 on 2022-02-19 05:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Veterinarian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background', models.ImageField(default='background.png', upload_to='backgrounds')),
                ('bio', models.TextField(blank=True, default='no bio...', max_length=255)),
                ('address', models.TextField(blank=True, max_length=255)),
                ('number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('usertype2', models.TextField(blank=True, default='Veterinarian')),
                ('avatar', models.ImageField(default='vet_avatar.png', upload_to='avatars')),
                ('following', models.ManyToManyField(blank=True, related_name='vet_following', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background', models.ImageField(default='background.png', upload_to='backgrounds')),
                ('bio', models.TextField(blank=True, default='no bio...', max_length=255)),
                ('address', models.TextField(blank=True, max_length=255)),
                ('number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('usertype3', models.TextField(blank=True, default='Store')),
                ('avatar', models.ImageField(default='store_avatar.png', upload_to='avatars')),
                ('store_type', models.CharField(choices=[('PETSTORE', 'Pet Store'), ('PRODUCTSTORE', 'Pet Product Store')], max_length=50)),
                ('following', models.ManyToManyField(blank=True, related_name='store_following', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='store', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pet_Lover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background', models.ImageField(default='background.png', upload_to='backgrounds')),
                ('bio', models.TextField(blank=True, default='no bio...', max_length=255)),
                ('address', models.TextField(blank=True, max_length=255)),
                ('number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('usertype4', models.TextField(blank=True, default='Pet Lover')),
                ('avatar', models.ImageField(default='avatar.png', upload_to='avatars')),
                ('following', models.ManyToManyField(blank=True, related_name='petLover_following', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='petLover', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background', models.ImageField(default='background.png', upload_to='backgrounds')),
                ('bio', models.TextField(blank=True, default='no bio...', max_length=255)),
                ('address', models.TextField(blank=True, max_length=255)),
                ('number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('usertype1', models.TextField(blank=True, default='Pet')),
                ('avatar', models.ImageField(default='pet_avatar.png', upload_to='avatars')),
                ('pet_type', models.CharField(blank=True, choices=[('CAT', 'Cat'), ('DOG', 'Dog'), ('FISH', 'Fish'), ('HAMSTER', 'Hamster'), ('RABBIT', 'Rabbit'), ('MOUSE', 'Mouse'), ('TURTLE', 'Turtle'), ('REPTILE', 'Reptile'), ('BIRD', 'Bird'), ('AMPHIBIAN', 'Amphibian'), ('MAMMAL', 'Mammal'), ('OTHER', 'Other')], max_length=50)),
                ('breed', models.TextField(blank=True, max_length=50)),
                ('following', models.ManyToManyField(blank=True, related_name='pet_following', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
